
// Часть 1
// Создать класс на языке C# - TaskQueue - Пул Потоков
// Создаёт указанное количество потоков пула в конструкторе
// Содержит очередь задач из делегатов без параметров
// Обеспечивает постановку в очередь и последующее выполнение делегатов с помощью метода MethodQueueDelegate
// Работу можно любую (считать и так далее)
// Часть 2
// Разработать класс для имитации часов с обратным отсчётом, реализующей возможность по истечению назначенного времени
// (пользователем передаётся в класс время, через конструктор или интерфейс), передавать сообщение и
// дополнительную информацию о событии, любому подписавшемуся на событие типу
// Предусмотреть возможность подписки на событие нескольким классам 

// 1 часть
// lockBuffer который представляет собой журнал строковых сообщений
// предоставляет метод Add(string str)
// буфиризирует добавляемое одиночное сообщение и пишет на диск
// периодически скидывает инфу на диск
// периодически пишет на диск по таймеру вне зависимости от количества
// 2 часть
// ститический метод ParrallelWhaitAll 
// принимает в параметрах массив делегатов и исполняет из параллельно при помощи пула потоков
// Дожидается исполнения всех делегатов
// Реализовать простейший пример

using TaskQueue;

var clock = new Clock(TimeSpan.FromSeconds(5));
clock.OnTimer += (sender, eventArgs) =>
{
    Console.WriteLine("Tick");
};

clock.OnTimer += (sender, eventArgs) =>
{
    Console.WriteLine("Tick");
};
clock.Start();
Console.ReadLine();